data <- data(whas500)
data(whas500)
install.packages('smoothHR')
data(whas500)
#install.packages('smoothHR')
library(smoothHR)
data(whas500)
data <- data(whas500)
data(whas500)
force(whas500)
data <- data(whas500)
data(whas500)
library(smoothHR)
data(whas500)
library(tidyverse)
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
View(data)
data_asframe <- as.data.frame(data)
View(data_asframe)
View(data)
View(data_asframe)
##Lectura de datos
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
whas500 <- survival::Surv(time=data$lenfol, event = data$fstat)
#Kaplan-Maier (una variable)
whas500_survfit <- survival::survfit(whas500 ~ 1)
plot(whas500_survfit)
View(whas500_survfit)
#Kaplan-Maier (doble variable)
whas500_survfit_genero <- survival::survfit(whas500 ~ gender)
#Kaplan-Maier (doble variable)
whas500_survfit_genero <- survival::survfit(whas500 ~ gender, data=data)
plot(whas500_survfit_genero)
#Regresión de Cox
whas500_cox <- survival::coxph(whas500 ~ as.factor(gender), data = data)
whas500_cox
whas500_assump
#Test de proporcionalidad
whas500_assump <- survival::cox.zph(whas500_cox)
whas500_assump
whas500_assump
#Media de supervivientes para una variable
whas500_survfit_mean <- survfit(Surv(time, status) ~ 1, data = data)
#Media de supervivientes para una variable
whas500_survfit_mean <- survival::survfit(Surv(time, status) ~ 1, data = data)
#Media de supervivientes para una variable
whas500_survfit_mean <- survival::survfit(survival::Surv(time, status) ~ 1, data = data)
#install.packages('survival')
#install.packages('smoothHR')
library(survival)
library(smoothHR)
library(tidyverse)
##Lectura de datos
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
#Indicamos que los datos son de tipo survival, con un tiempo y con un evento
whas500 <- survival::Surv(time=data$lenfol, status = data$fstat)
#Indicamos que los datos son de tipo survival, con un tiempo y con un evento
whas500 <- survival::Surv(time=data$lenfol, event = data$fstat)
#Kaplan-Maier (una variable)
whas500_survfit <- survival::survfit(whas500 ~ 1)
plot(whas500_survfit)
#Media de supervivientes para una variable
whas500_survfit_mean <- survival::survfit(survival::Surv(time, event) ~ 1, data = data)
#Media de supervivientes para una variable
whas500_survfit_mean <- survival::survfit(survival::Surv(time, event) ~ 1, data = whas500)
#Media de supervivientes para una variable
whas500_survfit_mean <- survival::survfit(survival::Surv(time, event) ~ 1, data = whas500_survfit)
#Indicamos que los datos son de tipo survival, con un tiempo y con un evento
whas500 <- survival::Surv(time=data$lenfol, event = data$fstat)
#Kaplan-Maier (una variable)
whas500_survfit <- survival::survfit(whas500 ~ 1)
plot(whas500_survfit)
View(data)
View(whas500_survfit)
View(data)
summary(survival::survfit(survival::Surv(time, event) ~ 1, data = whas500), times = 365.25)
View(whas500_survfit)
summary(survival::survfit(survival::Surv(time, status) ~ 1, data = whas500), times = 365.25)
summary(survival::survfit(survival::Surv(time, status) ~ 1, data = data), times = 365.25)
summary(survival::survfit(survival::Surv(time, event) ~ 1, data = data), times = 365.25)
summary(survival::survfit(whas500), times = 365.25)
summary(survival::survfit(whas500_survfit), times = 365.25)
##Lectura de datos
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
View(data)
fit <- survfit(Surv(time, status = data$fstat) ~ sex, data = data)
fit <- survfit(Surv(data$lenfol, data$fstat) ~ sex, data = data)
fit <- survfit(Surv(data$lenfol, data$fstat) ~ 1, data = data)
print(fit)
#install.packages('survival')
library(survival)
library(tidyverse)
#### Lectura de datos
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
#### Obtenemos los datos de tipo survival
whas500 <- survival::Surv(time=data$lenfol, event = data$fstat)
#### Análisis de Kaplan-Maier
### UNA VARIABLE
## Resumen de datos
sum_one <- survfit(Surv(data$lenfol, data$fstat) ~ 1, data = data)
print(sum_one)
sum_one_1y <- summary(survfit(Surv(time, status) ~ 1, data = data), times = 365.25)
print(sum_one_1y)
sum_one_1y <- summary(survfit(Surv(data$lenfol, data$fstat) ~ 1, data = data), times = 365.25)
print(sum_one_1y)
sum_one_3y <- summary(survfit(Surv(data$lenfol, data$fstat) ~ 1, data = data), times = 365.25*3)
print(sum_one_3y)
survfit_one <- survival::survfit(whas500 ~ 1)
plot(survfit_one)
sum_gender <- survfit(Surv(data$lenfol, data$fstat) ~ gender, data = data)
print(sum_gender)
sum_gender_1y <- summary(survfit(Surv(data$lenfol, data$fstat) ~ gender, data = data), times = 365.25)
print(sum_gender_1y)
sum_gender_3y <- summary(survfit(Surv(data$lenfol, data$fstat) ~ gender, data = data), times = 365.25*3)
print(sum_gender_3y)
View(sum_gender_3y)
survfit_gender <- survival::survfit(whas500 ~ gender)
plot(survfit_gender)
## Visualización (con una variable)
survfit_gender <- survival::survfit(whas500 ~ gender)
View(data)
View(data)
## Visualización (con una variable)
survfit_gender <- survival::survfit(whas500 ~ gender, data = data)
plot(survfit_gender)
## pvalue entre género
sd <- survdiff(Surv(data$lenfol, data$fstat) ~ gender, data = data)
pvalue <- 1 - pchisq(sd$chisq, length(sd$n) - 1)
print(pvalue)
## Regresión de Cox (solo con género)
cox_gender <- coxph(Surv(data$lenfol, data$fstat) ~ gender, data = data)
print(cox_gender)
View(cox_gender)
summary(cox_gender)
## Regresión de Cox (con diferentes variables)
cox_multi <- coxph(Surv(time, status) ~ gender + age + diasbp, data =  data)
## Regresión de Cox (con diferentes variables)
cox_multi <- coxph(Surv(data$lenfol, data$fstat) ~ gender + age + diasbp, data =  data)
print(cox_multi)
summary(cox_multi)
knitr::opts_chunk$set(echo = TRUE)
# Disposición del paquete
install.packages('survival')
library(survival)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
veteran
# Disposición del paquete
install.packages('survival')
library(survival)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
data(veteran)
veteran
veterean_aux <- veteran
View(veterean_aux)
veterean <- Surv(time, status)
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
# Disposición del paquete
install.packages('survival')
library(survival)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
whas500 <- Surv(time=whas500_aux$lenfol, event = whas500_aux$fstat)
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
View(veteran_aux)
data <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv', header = T)
#### Obtenemos los datos de tipo survival
whas500 <- survival::Surv(time=data$lenfol, event = data$fstat)
View(data)
library(tidyverse)
data_aux <- data %>%
group_by(fstat) %>%
summarise(
n = count()
)
data_aux <- data %>%
group_by(fstat) %>%
summarise(
n = n()
)
View(data_aux)
View(data)
View(data)
summary(data$diasbp)
# Disposición del paquete
#install.packages('survival')
#install.packages('tidyverse')
library(survival)
library(tidyverse)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
whas500 <- Surv(time=whas500_aux$lenfol, event = whas500_aux$fstat)
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
whas500_aux <- whas500_aux %>%
mutate(
diasbp_cat = case_when(
diasbp < 63 ~ "first_q",
diasbp < 79 ~ "second_q",
diasbp < 91.25 ~ "third_q",
diasbp < 198.1 ~ 'fourth_q',
TRUE ~ as.character(diasbp)
)
)
cox_multi_2 <- coxph(Surv(whas500_aux$lenfol, whas500_aux$fstat) ~ gender + age + diasbp_cat, data =  whas500_aux)
summary(cox_multi_2)
View(whas500_aux)
library(survival)
library(tidyverse)
# Carga inicial de datos
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
View(veteran_aux)
survfit_one <- survfit(veteran ~ 1)
plot(survfit_one)
unique(veteran_aux$celltype)
View(veteran_aux)
sum_vet <- survfit(Surv(veteran_aux$time, veteran_aux$status) ~ 1, data = veteran_aux)
print(sum_vet)
summary(veteran_aux$time)
head(sort(veteran_aux$time,decreasing=TRUE), n = 10)
head(veteran_aux,sort(veteran_aux$time,decreasing=TRUE), n = 10)
survfit_celltype <- survfit(veteran_aux ~ celltype, data = whas500_aux)
plot(survfit_celltype)
survfit_celltype <- survfit(veteran_aux ~ celltype, data = veteran_aux)
plot(survfit_celltype)
# Visualización
survfit_celltype <- survfit(veteran_aux ~ prior, data = veteran_aux)
View(veteran_aux)
# Visualización
survfit_celltype <- survfit(veteran_aux ~ prior, data = veteran_aux)
# Visualización
survfit_celltype <- survfit(veteran_aux ~ trt, data = veteran_aux)
plot(survfit_celltype)
# Carga inicial de datos
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
# Visualización
survfit_celltype <- survfit(veteran_aux ~ trt, data = veteran_aux)
# Visualización
survfit_gender <- survfit(veteran_aux ~ trt, data = veteran_aux)
# Visualización
survfit_gender <- survfit(veteran ~ trt, data = veteran_aux)
plot(survfit_gender)
# Visualización
survfit_gender <- survfit(veteran ~ celltype, data = veteran_aux)
plot(survfit_gender)
# Visualización
survfit_gender <- survfit(veteran ~ celltype, data = veteran_aux)
plot(survfit_gender)
legend(1, 95, legend=c("Line 1", "Line 2", "Line 3", "Line 4"), col=c("red", "blue", "green", "yellow"), lty=1:2, cex=0.8)
plot(survfit_gender)
legend(1, 95, legend=c("Line 1", "Line 2", "Line 3", "Line 4"), col=c("red", "blue", "green", "yellow"), lty=1:2, cex=0.8)
autoplot(survfit_gender)
autoplot(survfit_gender)
# Visualización
survfit_gender <- survfit(veteran ~ trt, data = veteran_aux)
autoplot(survfit_gender)
library(survminer)
install.packages('survminer')
ggsurvplot(survfit_celltype,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
palette = c("#E7B800", "#2E9FDF", 'blue', 'yellow'))
library(survminer)
ggsurvplot(survfit_celltype,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
palette = c("#E7B800", "#2E9FDF", 'blue', 'yellow'))
# Visualización
survfit_celltype <- survfit(veteran ~ celltype, data = veteran_aux)
ggsurvplot(survfit_celltype,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
palette = c("#E7B800", "#2E9FDF", 'blue', 'yellow'))
ggsurvplot(survfit_celltype,
pval = TRUE,
conf.int = TRUE,
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_minimal(), # Change ggplot2 theme
palette = c("red", "green", 'blue', 'yellow'))
ggsurvplot(survfit_celltype,
pval = FALSE,
conf.int = FALSE,
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_minimal(), # Change ggplot2 theme
palette = c("red", "green", 'blue', 'yellow'))
ggsurvplot(survfit_celltype,
pval = FALSE,
conf.int = FALSE,
surv.median.line = "hv", # Specify median survival
ggtheme = theme_minimal(), # Change ggplot2 theme
palette = c("red", "green", 'blue', 'yellow'))
ggsurvplot(survfit_celltype,
pval = FALSE,
conf.int = FALSE,
ggtheme = theme_minimal(), # Change ggplot2 theme
palette = c("red", "green", 'blue', 'yellow'))
# Resumen de datos
sum_celltype <- survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux)
print(sum_celltype)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 365.25)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 365.25)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 25)
print(sum_celltype_1y)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 365.25)
print(sum_celltype_1y)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 365.25)
# Supervivencia tras 1 y 3 años
sum_celltype_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux), times = 365.25, extend = TRUE)
print(sum_celltype_1y)
# p-value
sd <- survdiff(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux)
pvalue <- 1 - pchisq(sd$chisq, length(sd$n) - 1)
print(pvalue)
# Regresión de Cox con género
cox_celltype <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ celltype, data = veteran_aux)
summary(cox_celltype)
View(veteran_aux)
# Regresión de Cox con tres variables
cox_multi_vet <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ celltype + age + trt + diagtime, data =  veteran_aux)
summary(cox_multi_vet)
sum_trt <- survfit(Surv(veteran_aux$time, veteran_aux$status) ~ trt, data = veteran_aux)
print(sum_trt)
cox_trt <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ trt, data = veteran_aux)
summary(cox_trt)
# Regresión de Cox con tres variables
cox_multi_vet <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ celltype + age + trt + diagtime, data =  veteran_aux)
summary(cox_multi_vet)
# Regresión de Cox con tres variables
cox_multi_vet <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ celltype + age + trt + prior + diagtime, data =  veteran_aux)
summary(cox_multi_vet)
cox_prior <- coxph(Surv(veteran_aux$time, veteran_aux$status) ~ prior, data = veteran_aux)
summary(cox_prior)
# Disposición del paquete
#install.packages('survival')
#install.packages('survminer')
#install.packages('tidyverse')
library(survival)
library(survminer)
library(tidyverse)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
whas500 <- Surv(time=whas500_aux$lenfol, event = whas500_aux$fstat)
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
# Visualización
survfit_vet <- survfit(veteran ~ 1)
plot(survfit_vet)
# Resumen
sum_vet <- survfit(Surv(veteran_aux$time, veteran_aux$status) ~ 1, data = veteran_aux)
print(sum_vet)
# Segundo resumen
summary(veteran_aux$time)
head(sort(veteran_aux$time,decreasing=TRUE), n = 10)
# Supervivencia tras 1 y 3 años
sum_vet_1y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ 1, data = veteran_aux), times = 365.25, extend = TRUE)
print(sum_vet_1y)
sum_vet_3y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ 1, data = veteran_aux), times = 365.25*3, extend = TRUE)
print(sum_vet_3y)
# Disposición del paquete
#install.packages('survival')
#install.packages('survminer')
#install.packages('tidyverse')
library(survival)
library(survminer)
library(tidyverse)
# Carga inicial de datos
whas500_aux <- read.csv('https://raw.githubusercontent.com/BUFDataScience/2_tidydata_survival_analysis/master/whas500/whas500.csv')
veteran_aux <- veteran
#Especificamos que los datos sean de tipo survival
whas500 <- Surv(time=whas500_aux$lenfol, event = whas500_aux$fstat)
veteran <- Surv(time=veteran_aux$time, event = veteran_aux$status)
sum_vet_2y <- summary(survfit(Surv(veteran_aux$time, veteran_aux$status) ~ 1, data = veteran_aux), times = 365.25*2, extend = TRUE)
